{
  "stats": {
    "suites": 7,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "start": "2019-05-15T02:05:55.525Z",
    "end": "2019-05-15T02:06:08.688Z",
    "duration": 13163,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "2b17c6bb-819d-4cc4-9d18-80d2e0935118",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "9e3a2e43-deaa-4352-b8e8-26a3f09a89b3",
        "title": "3、告警接口测试",
        "fullFile": "D:\\Project\\nodeJS\\iovVis\\apiGateway\\test\\unit_test_alarms.js",
        "file": "\\test\\unit_test_alarms.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a 500 response",
            "fullTitle": "3、告警接口测试 should return a 500 response",
            "timedOut": false,
            "duration": 233,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`rules/alarms/${util.unitTestParams.deviceIdError}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .expect(500, done);",
            "err": {},
            "isRoot": false,
            "uuid": "2eacc306-aeda-4428-ba21-e1bf7336f24e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST should return a 200 response'",
            "fullTitle": "3、告警接口测试 POST should return a 200 response'",
            "timedOut": false,
            "duration": 871,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.post(`rules/alarms/${util.unitTestParams.deviceId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .send([\n        {\n            \"Key\": \"温度\",\n            \"IndeterminateRules\": {\n                \"min\": \"10\",\n                \"max\": \"20\"\n            },\n            \"WarningRules\": {\n                \"min\": \"30\",\n                \"max\": \"40\"\n            }\n        }\n    ])\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "931b4746-c341-4bcb-8060-5d22f1141b17",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GET  should return a 200 response'",
            "fullTitle": "3、告警接口测试 GET  should return a 200 response'",
            "timedOut": false,
            "duration": 428,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.get(`rules/alarms/${util.unitTestParams.deviceId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    //.expect(200, done);\n    .end(function (err, resp) {\n        done();\n        var Key = resp.body[0].Key;\n        var IndeterminateRules = resp.body[0].IndeterminateRules;\n        var WarningRules = resp.body[0].WarningRules;\n        //console.info(IndeterminateRules);\n        util.expect(Key).to.be.equal('温度');\n        util.expect(IndeterminateRules.min).to.be.equal('10');\n        util.expect(IndeterminateRules.max).to.be.equal('20');\n        util.expect(WarningRules.min).to.be.equal('30');\n        util.expect(WarningRules.max).to.be.equal('40');\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "1d240302-7d62-4dc2-bd8b-9cb47964ba5d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2eacc306-aeda-4428-ba21-e1bf7336f24e",
          "931b4746-c341-4bcb-8060-5d22f1141b17",
          "1d240302-7d62-4dc2-bd8b-9cb47964ba5d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1532,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "558b7b3e-e6e8-4bcc-9a7c-c04b4c8fed70",
        "title": "7、获取转换后的device.json接口测试",
        "fullFile": "D:\\Project\\nodeJS\\iovVis\\apiGateway\\test\\unit_test_get_device_json.js",
        "file": "\\test\\unit_test_get_device_json.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "获取转换后的device.json GET should return a 200 response",
            "fullTitle": "7、获取转换后的device.json接口测试 获取转换后的device.json GET should return a 200 response",
            "timedOut": false,
            "duration": 278,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`getConvertDeviceJson/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.sysAdminToken)\n    //.expect(200, done);\n    .end(function (err, resp) {\n        var props = resp.body[0];\n        //console.log(props);\n        (props.client_attrib != undefined).should.be.true;\n        (props.share_attrib  != undefined).should.be.true;\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "21a2ec95-8b2c-4bc5-ba4e-7eafcef64280",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "21a2ec95-8b2c-4bc5-ba4e-7eafcef64280"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 278,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4a8f4568-b305-40c5-b110-717a38f60a69",
        "title": "2、报表接口测试",
        "fullFile": "D:\\Project\\nodeJS\\iovVis\\apiGateway\\test\\unit_test_report.js",
        "file": "\\test\\unit_test_report.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GET 获取报表文件 错误的ID should return a 500 response",
            "fullTitle": "2、报表接口测试 GET 获取报表文件 错误的ID should return a 500 response",
            "timedOut": false,
            "duration": 202,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`reports/${util.unitTestParams.assetIdError}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .expect(500, done);",
            "err": {},
            "isRoot": false,
            "uuid": "4440d94b-d03f-4e05-b5f3-154c7d7c7eac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GET 获取报表文件 正确的ID should return a 200 response",
            "fullTitle": "2、报表接口测试 GET 获取报表文件 正确的ID should return a 200 response",
            "timedOut": false,
            "duration": 211,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "this.timeout(30000);\nutil.API.get(`reports/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        limit: 20\n    })\n    //.set('limit', 20)\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "fad4a6e1-691c-4e96-8a66-d3d4662a973b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GET 获取所有报表文件  reports/ALL",
            "fullTitle": "2、报表接口测试 GET 获取所有报表文件  reports/ALL",
            "timedOut": false,
            "duration": 208,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "this.timeout(20000);\nutil.API.get(`reports/ALL`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        limit: 200\n    })\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "aaaa03da-9696-4e7b-9cd9-153441e442ee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "生成报表文件前获取模板文件 GET should return a 200 response",
            "fullTitle": "2、报表接口测试 生成报表文件前获取模板文件 GET should return a 200 response",
            "timedOut": false,
            "duration": 208,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.get(`templates/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .expect(200)\n    .end(function(err, resp){\n        done();\n        tmplateFileId = resp.body[0].fileId;\n        //console.log(resp.body);\n        //console.log(tmplateFileId);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "050d7b78-9b22-439e-a77c-c41221e51754",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST 生成报表文件 should return a 200 response",
            "fullTitle": "2、报表接口测试 POST 生成报表文件 should return a 200 response",
            "timedOut": false,
            "duration": 1230,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\n//console.log(`post use: ${tmplateFileId}`);\nutil.API.post(`reports/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .send({\n        fileId: tmplateFileId,\n        report_name:\"UnitTestReport\",\n        report_type:\"DAY\",\n        operator:\"柳强东\",\n        startTime:\"1551369600000\",\n        endTime:\"1556640000000\"\n    })\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "a48ddc8a-9607-4e53-a31b-ca47d72d4aff",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST 手动上传报表文件 should return a 200 response",
            "fullTitle": "2、报表接口测试 POST 手动上传报表文件 should return a 200 response",
            "timedOut": false,
            "duration": 1163,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "this.timeout(50000);\nutil.API.post(`reports/upload/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .field('report_name', manualUploadReportName)\n    .field('report_type', 'DAY')\n    .field('operator', '柳强东')\n    .attach('report_file', '20190508.docx')\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "51b4066c-5b1b-440b-b511-5485bef7516d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GET 删除报表前获取数据  reports/ALL",
            "fullTitle": "2、报表接口测试 GET 删除报表前获取数据  reports/ALL",
            "timedOut": false,
            "duration": 249,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "this.timeout(20000);\nutil.API.get(`reports/ALL`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        limit: 200\n    })\n    //.set('limit', 20)\n    .end(function (err, resp) {\n        done();\n        var reports = resp.body.data;\n        console.log(reports.length);\n        var find = false;\n        for (var i = 0; i < reports.length; i++) {\n            let _dt = reports[i];\n            if (_dt.report_name === manualUploadReportName) {\n                find = true;\n                deleteParams.assetId   = _dt.assetId;\n                deleteParams.report_id = _dt.report_id;\n                deleteParams.report_fileId = _dt.report_fileId;\n                break;\n            }\n        }\n        \n        util.expect(find).to.be.equal(true);\n    });\n    //.expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "264a9051-e7dc-458c-93a3-8499ff733661",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "DELETE 删除报表",
            "fullTitle": "2、报表接口测试 DELETE 删除报表",
            "timedOut": false,
            "duration": 399,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//console.log(`delete params: ${deleteParams.assetId} ${deleteParams.report_id} ${deleteParams.report_fileId}`);\nthis.timeout(20000);\n// 临时屏蔽\nutil.API.delete(`reports/${deleteParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        reportId: deleteParams.report_id,\n        fileId: deleteParams.report_fileId\n    })\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "63966179-55e9-4c7c-abe6-2b2b1c6f63bb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4440d94b-d03f-4e05-b5f3-154c7d7c7eac",
          "fad4a6e1-691c-4e96-8a66-d3d4662a973b",
          "aaaa03da-9696-4e7b-9cd9-153441e442ee",
          "050d7b78-9b22-439e-a77c-c41221e51754",
          "a48ddc8a-9607-4e53-a31b-ca47d72d4aff",
          "51b4066c-5b1b-440b-b511-5485bef7516d",
          "264a9051-e7dc-458c-93a3-8499ff733661",
          "63966179-55e9-4c7c-abe6-2b2b1c6f63bb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3870,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b8bc7ede-ab79-4105-aa19-21ad85162a44",
        "title": "6、统计接口测试",
        "fullFile": "D:\\Project\\nodeJS\\iovVis\\apiGateway\\test\\unit_test_statistics.js",
        "file": "\\test\\unit_test_statistics.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "获取物理量count信息 GET should return a 200 response",
            "fullTitle": "6、统计接口测试 获取物理量count信息 GET should return a 200 response",
            "timedOut": false,
            "duration": 467,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`statistics/${testParams.deviceId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        keys: testParams.keys,\n        startTime: testParams.startTime,\n        endTime: testParams.endTime\n    })\n    //.expect(200, done);\n    .end(function (err, resp) {\n        var cntInfo = resp.body[0];\n        //console.log(cntInfo);\n        util.expect(cntInfo.key).to.be.equal(testParams.keys);\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "8f82d66c-174e-4b32-a33a-bd691a5e2a4a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取物理量count信息 GET should return a 200 response",
            "fullTitle": "6、统计接口测试 获取物理量count信息 GET should return a 200 response",
            "timedOut": false,
            "duration": 458,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`statistics/${testParams.deviceId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        keys: testParams.keys + 'ERROR',\n        startTime: testParams.startTime,\n        endTime: testParams.endTime\n    })\n    //.expect(200, done);\n    .end(function (err, resp) {\n        var cntInfo = resp.body[0];\n        util.expect(cntInfo).to.be.equal(undefined);\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "928d697e-4477-4b2e-80fb-5378ea36e16b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8f82d66c-174e-4b32-a33a-bd691a5e2a4a",
          "928d697e-4477-4b2e-80fb-5378ea36e16b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 925,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f6eb7e54-aa21-4a57-9fa7-1ca6c19e3f84",
        "title": "1、模板接口测试",
        "fullFile": "D:\\Project\\nodeJS\\iovVis\\apiGateway\\test\\unit_test_template.js",
        "file": "\\test\\unit_test_template.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GET should return a 500 response",
            "fullTitle": "1、模板接口测试 GET should return a 500 response",
            "timedOut": false,
            "duration": 193,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`templates/${util.unitTestParams.assetIdError}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .expect(500, done);",
            "err": {},
            "isRoot": false,
            "uuid": "fb0ebcf3-1eac-4d14-9fab-3442e2fe3073",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GET should return a 200 response",
            "fullTitle": "1、模板接口测试 GET should return a 200 response",
            "timedOut": false,
            "duration": 198,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.get(`templates/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "30cced9c-b0ba-4d34-bb4c-7420474933ea",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GET 删除模板前获取数据",
            "fullTitle": "1、模板接口测试 GET 删除模板前获取数据",
            "timedOut": false,
            "duration": 211,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.get(`templates/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        limit: 200\n    })\n    .end(function (err, resp) {\n        done();\n        var reports = resp.body;\n        console.log(reports.length);\n        if (reports.length > 0) {\n            let _dt = reports[reports.length - 1];\n            deleteParams.assetId   = util.unitTestParams.assetId;\n            deleteParams.template_name = _dt.template_name;\n            //console.log(`delete params: ${deleteParams.assetId} ${deleteParams.report_id} ${deleteParams.report_fileId}`);\n        }\n    });\n    //.expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "e9bd2990-970b-4769-baf9-487f2c1470cf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "DELETE 删除模板",
            "fullTitle": "1、模板接口测试 DELETE 删除模板",
            "timedOut": false,
            "duration": 925,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(`delete params: ${deleteParams.assetId} ${deleteParams.template_name}`);\n//this.timeout(20000);\n// 临时屏蔽\nutil.API.delete(`templates/${deleteParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        templateName : 'UnitTestTemplate'\n    })\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "658b143d-7fcd-4834-989f-c82637e53657",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST 上传模板",
            "fullTitle": "1、模板接口测试 POST 上传模板",
            "timedOut": false,
            "duration": 1510,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"start up 模板\");\nthis.timeout(50000);\nutil.API.post(`templates/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .set('Content-Type', 'multipart/form-data')\n    .field('template_name', 'UnitTestTemplate')\n    .attach('template_file', '20190508.docx')\n    .end(function (err, resp) {\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "6f6a00e2-6127-41c0-b740-9ee2593cf59f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fb0ebcf3-1eac-4d14-9fab-3442e2fe3073",
          "30cced9c-b0ba-4d34-bb4c-7420474933ea",
          "e9bd2990-970b-4769-baf9-487f2c1470cf",
          "658b143d-7fcd-4834-989f-c82637e53657",
          "6f6a00e2-6127-41c0-b740-9ee2593cf59f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3037,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "85704789-7143-40c6-a8a4-825feb2a08f2",
        "title": "5、视频墙接口测试",
        "fullFile": "D:\\Project\\nodeJS\\iovVis\\apiGateway\\test\\unit_test_videoWall.js",
        "file": "\\test\\unit_test_videoWall.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "获取视频墙信息 GET should return a 200 response",
            "fullTitle": "5、视频墙接口测试 获取视频墙信息 GET should return a 200 response",
            "timedOut": false,
            "duration": 201,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`currentUser/wallResult/`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    //.expect(200, done);\n    .end(function (err, resp) {\n        var videoInfo = resp.body.videoInfo;\n        //console.log(videoInfo);\n        util.expect(videoInfo).to.be.equal('UnitTestVideoInfo');\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "0143b204-a8ef-42dd-9303-8211a67d6423",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "设置视频墙信息 POST should return a 200 response",
            "fullTitle": "5、视频墙接口测试 设置视频墙信息 POST should return a 200 response",
            "timedOut": false,
            "duration": 192,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.post(`currentUser/wallResult/`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        videoInfo: \"UnitTestVideoInfo\"\n    })\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "370e8c01-0e1f-4114-85b9-2d37d2a14f08",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0143b204-a8ef-42dd-9303-8211a67d6423",
          "370e8c01-0e1f-4114-85b9-2d37d2a14f08"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 393,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "08ec9afc-5b4c-48ab-9310-3e2d59420587",
        "title": "4、预警接口测试",
        "fullFile": "D:\\Project\\nodeJS\\iovVis\\apiGateway\\test\\unit_test_warnings.js",
        "file": "\\test\\unit_test_warnings.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a 500 response",
            "fullTitle": "4、预警接口测试 should return a 500 response",
            "timedOut": false,
            "duration": 205,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// this.timeout(20000);\nutil.API.get(`warnings/${util.unitTestParams.assetIdError}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .expect(500, done);",
            "err": {},
            "isRoot": false,
            "uuid": "076cf918-97d0-4f06-a4ea-86aaf4ba8fd7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "设置资产预警状态 POST should return a 200 response'",
            "fullTitle": "4、预警接口测试 设置资产预警状态 POST should return a 200 response'",
            "timedOut": false,
            "duration": 1211,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.post(`warnings/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .query({\n        asset_warning_level: 'BLUE'\n    })\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "f76f221a-6893-41c9-b585-8cff3ed7a1e9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取资产预警状态 GET  should return a 200 response'",
            "fullTitle": "4、预警接口测试 获取资产预警状态 GET  should return a 200 response'",
            "timedOut": false,
            "duration": 215,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.get(`warnings/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    //.expect(200, done);\n    .end(function (err, resp) {\n        done();\n        //console.info(resp.body.asset_warning_level);\n        var level = resp.body.asset_warning_level;\n        util.expect(level).to.be.equal('BLUE');\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "79678467-36c9-4d25-ad37-c5693aa7ba9c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "设置资产预警规则 POST should return a 200 response'",
            "fullTitle": "4、预警接口测试 设置资产预警规则 POST should return a 200 response'",
            "timedOut": false,
            "duration": 1072,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.post(`rules/warnings/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    .send({\n        \"blueRules\": [\n            {\n                \"andRule\": [\n                    \"123456\"\n                ]\n            }\n        ],\n        \"orangeRules\": [\n            {\n                \"andRule\": [\n                    \"654321\"\n                ]\n            }\n        ]\n    })\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "212ee53f-bda4-4bb3-84ed-883bb8d8a77a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取资产预警规则 GET  should return a 200 response'",
            "fullTitle": "4、预警接口测试 获取资产预警规则 GET  should return a 200 response'",
            "timedOut": false,
            "duration": 410,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//this.timeout(20000);\nutil.API.get(`rules/warnings/${util.unitTestParams.assetId}`)\n    .set('Accept', 'application/json')\n    .set('X-Authorization', util.unitTestParams.token)\n    //.expect(200, done);\n    .end(function (err, resp) {\n        done();\n        //console.info(resp.body.blueRules);\n        //console.info(resp.body.orangeRules);\n        var blueRules = resp.body.blueRules[0];\n        var orangeRules = resp.body.orangeRules[0];\n        //var level = resp.body.asset_warning_level;      \n        util.expect(blueRules.andRule[0]).to.be.equal('123456');\n        util.expect(orangeRules.andRule[0]).to.be.equal('654321');\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "e12534bd-405b-4a9e-a3a5-6410a01dad76",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "076cf918-97d0-4f06-a4ea-86aaf4ba8fd7",
          "f76f221a-6893-41c9-b585-8cff3ed7a1e9",
          "79678467-36c9-4d25-ad37-c5693aa7ba9c",
          "212ee53f-bda4-4bb3-84ed-883bb8d8a77a",
          "e12534bd-405b-4a9e-a3a5-6410a01dad76"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3113,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}